{"version":3,"sources":["components/Loading.tsx","components/App.tsx","reportWebVitals.ts","index.tsx","contexts/Persistence.tsx","utils.ts"],"names":["Loading","App","Suspense","fallback","Persistence","FrontPage","React","lazy","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log","PersistenceContext","createContext","PersistenceProvider","children","useState","localStorage","getItem","persistenceItems","code","key","defaultValue","setCode","useEffect","debounceSave","Provider","value","usePersistenceContext","useContext","func","timer","timeout","args","clearTimeout","setTimeout","apply","debounce","setItem"],"mappings":"8KAEaA,EAAU,kBACtB,4C,OCCYC,EAAM,kBAClB,cAAC,IAAMC,SAAP,CAAgBC,SAAU,cAAC,EAAD,IAA1B,SACC,cAACC,EAAA,EAAD,UACC,cAACC,EAAD,SAKGA,EAAYC,IAAMC,MAAK,kBAAM,sD,gBCEpBC,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCHXQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAMzBb,EAAgBc,QAAQC,M,yICRlBC,EAAqBlB,IAAMmB,cAA6C,MAMvE,SAASC,EAAT,GAAsE,IAAvCC,EAAsC,EAAtCA,SAAsC,EACnDrB,IAAMsB,SAASC,aAAaC,QAAQC,EAAiBC,KAAKC,MAAQF,EAAiBC,KAAKE,cADrC,mBACpEF,EADoE,KAC9DG,EAD8D,KAO3E,OAJA7B,IAAM8B,WAAU,WACfC,EAAaN,EAAiBC,KAAKC,IAAKD,KACtC,CAACA,IAGH,cAACR,EAAmBc,SAApB,CACCC,MAAO,CACNP,OACAG,WAHF,SAMER,IAKG,SAASa,IACf,OAAOlC,IAAMmC,WAAWjB,GAGzB,IAAMa,ECrCC,SAAqDK,GAAwB,IAC/EC,EADgEC,EAAc,uDAAJ,IAE9E,OAAO,WAA6C,IAAC,IAAD,0BAArBC,EAAqB,yBAArBA,EAAqB,gBACnDC,aAAaH,GACbA,EAAQI,YAAW,WAClBL,EAAKM,MAAM,EAAMH,KACfD,ID+BgBK,EAAS,SAAChB,EAAaM,GAAd,OAAgCV,aAAaqB,QAAQjB,EAAKM,KAAQ,KAE1FR,EAAmB,CACxBC,KAAM,CACLC,IAAK,OACLC,aAAc,8B","file":"static/js/main.cb9b3e73.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => (\n\t<p>Loading...</p>\n);\n","import { Loading } from 'components/Loading';\nimport { PersistenceProvider } from 'contexts/Persistence';\nimport React from 'react';\n\nexport const App = () => (\n\t<React.Suspense fallback={<Loading/>}>\n\t\t<PersistenceProvider>\n\t\t\t<FrontPage/>\n\t\t</PersistenceProvider>\n\t</React.Suspense>\n);\n\nconst FrontPage = React.lazy(() => import('pages/FrontPage'));\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import { App } from 'components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from 'reportWebVitals';\nimport 'styles/index.scss';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App/>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from 'react';\nimport { debounce } from 'utils';\n\ninterface PersistenceContextType {\n\tcode: string;\n\tsetCode: (value: string) => void;\n}\n\nconst PersistenceContext = React.createContext<PersistenceContextType | null>(null);\n\ninterface PersistenceProviderProps {\n\tchildren: React.ReactNode;\n}\n\nexport function PersistenceProvider({ children }: PersistenceProviderProps) {\n\tconst [code, setCode] = React.useState(localStorage.getItem(persistenceItems.code.key) || persistenceItems.code.defaultValue);\n\n\tReact.useEffect(() => {\n\t\tdebounceSave(persistenceItems.code.key, code);\n\t}, [code]);\n\n\treturn (\n\t\t<PersistenceContext.Provider\n\t\t\tvalue={{\n\t\t\t\tcode,\n\t\t\t\tsetCode,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</PersistenceContext.Provider>\n\t);\n}\n\nexport function usePersistenceContext() {\n\treturn React.useContext(PersistenceContext)!;\n}\n\nconst debounceSave = debounce((key: string, value: string) => localStorage.setItem(key, value), 1000);\n\nconst persistenceItems = {\n\tcode: {\n\t\tkey: 'code',\n\t\tdefaultValue: '// Write your code here',\n\t},\n};\n","export function debounce<T extends (...args: any[]) => any>(func: T, timeout = 300){\n\tlet timer: NodeJS.Timeout;\n\treturn function (this: any, ...args: Parameters<T>) {\n\t\tclearTimeout(timer);\n\t\ttimer = setTimeout(() => {\n\t\t\tfunc.apply(this, args);\n\t\t}, timeout);\n\t};\n}\n"],"sourceRoot":""}